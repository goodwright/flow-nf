process {

    withName: BEDTOOLS_SHIFT {
        ext.args = '-m 1 -p -1'
    }

    withName: BEDTOOLS_GENOMECOV_POS {
        ext.args = '-dz -strand + -5'
    }

    withName: BEDTOOLS_GENOMECOV_NEG {
        ext.args = '-dz -strand - -5'
    }

    withName: SELECT_BED_POS {
        ext.cmd1 = 'awk \'{OFS="\\t"}{print \$1, \$2, \$2+1, ".", \$3, "+"}\''
        ext.suffix = '.pos'
        ext.ext = 'bed'
    }

    withName: SELECT_BED_NEG {
        ext.cmd1 = 'awk \'{OFS="\\t"}{print \$1, \$2, \$2+1, ".", \$3, "-"}\''
        ext.suffix = '.neg'
        ext.ext = 'bed'
    }

    withName: MERGE_AND_SORT {
        ext.cmd1 = 'sort -k1,1 -k2,2n'
        ext.suffix = '.sorted'
        ext.ext = 'bed'
    }

    withName: CROSSLINK_COVERAGE {
        ext.cmd1 = 'awk \'{OFS = "\t"}{if (\$6 == "+") {print \$1, \$2, \$3, \$5} else {print \$1, \$2, \$3, -\$5}}\' | sort -k1,1 -k2,2n'
        ext.suffix = '.sorted'
        ext.ext = 'bedgraph'
    }

    withName: CROSSLINK_NORMCOVERAGE {
        ext.cmd1 = """
                   awk -v total=\$CMD2 \'{printf "%s\\t%i\\t%i\\t%s\\t%f\\t%s\\n", \$1, \$2, \$3, \$4, 1000000*\$5/total, \$6}\' | 
                   awk \'{OFS = "\t"}{if (\$6 == "+") {print \$1, \$2, \$3, \$5} else {print \$1, \$2, \$3, -\$5}}\' | 
                   sort -k1,1 -k2,2n
                   """
        ext.cmd2 = 'awk \'BEGIN {total=0} {total=total+\$5} END {print total}\''
        ext.suffix = '.norm.sorted'
        ext.ext = 'bedgraph'
    }
}
